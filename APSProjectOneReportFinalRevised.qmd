---
title: "Report for Applied Data Science Project One"
format: pdf
editor: visual
---

## Report for Applied Data Science Project One

Group12: Mengyan Li (ml4779), Zishun Shen (zs2695), Zhisheng Yang (zy2675), Shayan Huda Chowdhury (sc4040)

##### Link to Github: <https://github.com/My990813/Applied-Data-Science-Project-One>

### Introduction and Data:

In our project, we looked at Korean Drama information data and review data for Korean Drama from 2015 to 2023. In the beginning of the project, each of us brought the data we are interested in to the meeting and voted for the best data. Mengyan Li brought this Korean Drama Data because of her interest in Korean drama. In the end of the meeting, Korean Drama Data got the highest vote because of its complexity and interpretability. The data is from Kaggle. <https://www.kaggle.com/datasets/chanoncharuchinda/korean-drama-2015-23-actor-and-reviewmydramalist?select=reviews.csv> It was made by Chanon Charuchinda, a data expert, for educational purpose.

As explained by Chanon Charuchinda, the data was taken from <https://mydramalist.com/shows/top_korean_dramas?page=1> through web scrapping. Chanon Charuchinda shared four csv data in Kaggle. After discussion, we chose two csv data—korean_drama.csv which included 1752 Korean drama's information and review.csv which included 10625 reviews given to the drama from users on the website. We chose these two because the other two csv did not contain any numerical data.

There are 17 columns in korean_drama.csv including drama ID, drama name, Released year, Director name, Screenwriter name, country of origin, type, Total number of episodes, Each episode duration in second, First aired date, End date, Day of the week that it was aired on, Network that it aired on, Content Rating, Short synopsis, Ranking on the website, and Popularity Ranking on the website.

There are 10 columns in review.csv including user ID, drama name, Score for Story, Score for acting, Score for music, Score for rewatch value, Overall Score, Review, Number of episode that the reviewer watched, and Number of people on the website that find this comment helpful.

### Methodology:

Because of interest in Korean drama, we searched Korean drama on Kaggle and found the files. The data was taken from <https://mydramalist.com/shows/top_korean_dramas?page=1> through web scrapping by Chanon Charuchinda–a data expert on Kaggle. The data is structured data with data quality problem such as date format, missing value, and outliers. The date contains mismatched date. Some are month-date-year but some are date-month-year. There are many missing values and outliers. For example, in the pop column in korean_drama.csv, there are many 99999 which are different from other Popularity Ranking values and are obviously outliers. And for missing values: there are many missing values in the categorical variable for example director name. And we cannot use KNN or other imputation methods for it.

Our study focus is popularity of Korean dramas. Many variables may contribute to the popularity such as the length of drama, music, and acting. Thus we focus on what score the users give to the dramas in many different sectors–music, story, acting, etc. And we also look at the correlation between different variables such as rank and popularity. We used multiple statistical methods such as t test, linear regression to approach this problem and found meaningful results.

### Data Cleaning:

![](untitled%20folder%202/raw%20data1.png){fig-align="left" width="558"}

![](untitled%20folder%202/rawdata2.png){fig-align="left"}

The above are the two tables we started for the data cleaning process. The following are our approaches:

The first step is removing outliers. Because we focus on popularity, and we plan to use popularity and overall score as the dependent variables for two different linear regression, we removed the outliers in pop and overall_score. We built a boxplot with the interquartile range and removed any outliers above the upper limit and lower limit. In total, we removed 609 outliers.

The second step is fixing the date. Like said, some dates are month-date-year but some are date-month-year. Thus we used Python to correct the date. Some dates only has month and year but no dates, thus we dropped these data.

The third step is filling in missing values. After analyzing the data's missing value pattern, we found out that most missing values are the name of directors and screenwriters, and Network that it aired on. At first we want to fill in these missing value. However, the only way is through web scrapping. Based on the two week deadline, there is not enough time for us to learn web scrapping and finish the project on time. Thus we fill in the missing value with "Others" and remove any missing values in the numerical variables.

The fourth step is mergeing dataset. The two datasets korean_drama.csv and review.csv have different numbers of rows. However, after analyzing datasets, we found out that the drama names in both datasets are very similar. Therefore, we used groupby function in pandas and grouped the review.csv by drama names. And we calculated the mean of the scores by the users who marked the same drama. We used the mean score as the score for this specific drama. We did this for Score for Story, Score for acting, Score for music, Score for rewatch value and Overall Score. Therefore, we merged the two datatables.

The following is the final cleaned data table:

![](untitled%20folder%202/finaldata.png){fig-align="left"}

### EDA:

Below is the summary statistics of variables: We can see the mean for music_score, story_score, acting_cast_score, rewatch_value_score,and overall_score are very close to the median compared to other variables. Although they are close, the data itself is still skewed. The standard deviation of the popularity ranking is the highest, meaning there is a lot of variation in the data.

|   | Total number of episodes | Duration | Rank | Popularity Ranking | Music score | Story score | Acting cast score | Rewatch cast score | Overall score | Number of people that found commit helpful |
|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|
| count | 1248 | 1248 | 1248 | 1248 | 1248 | 1248 | 1248 | 1248 | 1248 | 1248 |
| mean | 22 | 2633 | 8390 | 3028 | 7.3 | 7.4 | 8.3 | 6 | 7.6 | 12 |
| std | 26 | 1439 | 14502 | 3358 | 1.5 | 1.3 | 1.1 | 1 | 1.3 | 16 |
| min | 1 | 120 | 9 | 1 | 1 | 1 | 2 | 1 | 2.5 | 0 |
| 25% | 10 | 1140 | 1592 | 571 | 6.7 | 6.8 | 7.8 | 5 | 7 | 3 |
| 50% | 16 | 2700 | 3876 | 1713 | 7.6 | 7.6 | 8.5 | 6.2 | 7.8 | 6 |
| 75% | 18 | 3900 | 6896 | 4299 | 8.3 | 8.4 | 9.1 | 7.3 | 8.5 | 15 |
| max | 150 | 6300 | 62723 | 15980 | 10 | 10 | 10 | 10 | 10 | 158 |

Below are the histograms of all numeric variables:

![](untitled folder 2/A.png){width="280"}

Looking at data for Total number of episodes, we can see that there is only one peak and the data is right skewed. Looking at data for Duration, we can see that there are two peaks, one at 4000 and the other at 1000, meaning there are mainly two types of drama, one is longer version for each episode and the other is shorter version for each episode.

![](untitled folder 2/B.png){fig-align="left" width="245"}

The data for rank and popularity ranking are also right skewed. Since higher number in ranking means lower popularity, most drama ranked high in the ranking and only a few have low popularity.

![](untitled folder 2/D.png){fig-align="left" width="229"}

The data for acting cast score is left skewed, meaning many drama have high score on acting cast. The audience provide good reviews on the acting cast of Korean drama. The data for rewatch value score is also left skewed. However, there are more scores below the median meaning more audience do not want to rewatch the drama.

![](untitled folder 2/C.png){fig-align="left" width="230"}

The data for music score and story score are both left skewed meaning most audience gave high scores to the music and the story and only a few audience gave low scores.

![](untitled folder 2/E.png){fig-align="left" width="210"}

The data for the overall score is left skewed, meaning most audience gave high scores to the drama overall. The data for the Number of people that found commit helpful is right skewed, meaning the commit are very personalized so that not so many people hold same opinion.

Below is the correlation heatmap of all numerical values:

![](untitled folder 2/corr.png)

We can see that popularity ranking and ranking are highly correlated. And music_score, story_score, acting_cast_score, rewatch_value_score, and overall_score are highly correlated.

![](untitled folder 2/v2merge.png){fig-align="left"}

Same thing happened when we look at the linear regression plot. We can see that there is a positive relationship between popularity ranking and rank. We also found that there is a negative relationship between duration and popularity ranking, meaning longer drama has higher popularity. Interesting thing to see is that there is a negative relationship between number of people found the commit helpful and popularity ranking, meaning when there is more people sharing same opinion, the drama is more popular.

By looking at the drama information and the review separately, we did the following EDA and analysis:

![](untitled folder 2/V1Sep.png)

This is the linear regression analysis between the overall score and story score/acting cast score/music music/rewatch value score. We can see that these are all positive relationship, meaning the story score/acting cast score/music music/rewatch value score all have a positive impact on the overall score.

By looking at the drama information without the impact of review, we found the following thing:

![](untitled folder 2/zhisheng1.png){fig-align="left"}

This is a simple linear regression without standardization and normalization.

Comparison: Without standardization and normalization and with standardization and normalization:

| Feature                  | Coefficient |
|--------------------------|-------------|
| year                     | -16         |
| Total number of episodes | 7           |
| Duration of each episode | -0.6        |
| rank                     | 0.2         |

| Feature                  | Coefficient |
|--------------------------|-------------|
| year                     | -38         |
| Total number of episodes | 195         |
| Duration of each episode | -929        |
| rank                     | 3146        |

This is with standardization and normalization.

Rank was already strongly correlated with popularity, but because it had a larger scale originally, it may have had a smaller coefficient in the unstandardized model. After standardization, its impact is clearer, leading to a larger coefficient, indicating that it has the strongest influence in predicting popularity.

![](untitled folder 2/zhisheng2.png){fig-align="left"}

From the bar chart, rank has the strongest positive impact, suggesting that higher-ranked dramas are significantly more popular. Duration, on the other hand, has a substantial negative effect, indicating that dramas aired for a longer period tend to be less popular, possibly due to audiences losing interest over time. The number of episodes has a smaller but still positive influence, implying that dramas with more episodes may attract greater engagement. Finally, the year of release has the least impact, showing that a drama’s release year is not a major factor in determining its popularity.

![](untitled folder 2/zhisheng3.png){fig-align="left"}

The actual vs. predicted popularity of K-dramas can tell us some insights about the model fit.

The blue line represents the actual popularity values, sorted in increasing order. The red crosses represent the predicted popularity values from the linear regression model.

The predicted values roughly follow the increasing trend of actual popularity, indicating that the model is capturing some underlying patterns.

There is significant scatter in the predicted values, especially in the higher popularity range. This suggests that the model struggles to accurately predict very popular dramas. The linear regression model seems to perform better for less popular dramas (left side of the graph), where the red points are closer to the blue line. The variance increases significantly as popularity rises.

|                          | T statistics | p value |
|--------------------------|--------------|---------|
| Year                     | -0.03        | 0.98    |
| Total number of episodes | 0.30         | 0.76    |
| Duration of each episode | 2.65         | 0.01    |
| rank                     | -0.79        | 0.43    |

In this T-test on standardized variables, the null hypothesis (H₀) states that there is no significant difference in the mean values of each feature between the training and test sets. The results indicate that most features, including year, total episodes (tot_eps), and rank, are well-balanced between the training and test sets, as their high p-values suggest no significant difference in their distributions. However, duration stands out with a statistically significant p-value (0.008), implying a potential distribution shift between the two sets. This suggests that the model might face inconsistencies when predicting dramas with extreme duration values, possibly affecting overall performance.

Besides, we also did analysis on the directors and screenwritters of Korean drama:

![](untitled folder 2/zishun1.png){fig-align="left" width="433"}

![](untitled folder 2/zishun2.png){fig-align="left" width="413"}

![](untitled folder 2/zishun3.png){fig-align="left" width="413"}

![](untitled folder 2/zishun4.png){fig-align="left" width="404"}

The top 10 and bottom 10 directors/screenwriters with respect to Korean Drama ranking and popularity are shown in the above charts. Besides, we also did some analysis based on time difference:

![](untitled folder 2/zishun5.png){fig-align="left"}

From the boxplots, we can see Korean Drama ranking increased from 2015 to 2018, and there was a slightly decreasing trend after 2019, which is also supported by the trend of mean ranking each year. There was an apparent increase in the overall popularity of Korean Drama (since lower number indicates higher popularity).

![](untitled folder 2/missingheatmap.png){fig-align="left"}

From the missing value heatmap, we can see most missing values are the name of directors and screenwriters, and Network that it aired on.

### Feature Engineering:

Below are the feature engineering we did:

![](untitled folder 2/features.png){fig-align="left"}

First, we checked the variance of all numerical features and we set a threshold of 0.01. After calculation, no features has zero or near zero variance, thus our features are all good. ![](untitled folder 2/feature2.png) Next, we did box-cox transformation to all numerical variables and did one-hot encoding to all categorical variables. We also tried standardization and normalization to all numerical variables. However, after analyzing the data itself, we think this is unnecessary bacause all the scores are in 10-point system. There is no necessity to normalize/standardize it. However, the number of people who finds the commit helpful and the popularity ranking should be normalized/standardized because we can not easily tell the popularity from the raw data. And the percentage of people who find the commit helpful is better than the raw data of number of people who find helpful. For other numerical variables—Total number of episodes, Each episode duration in second, and rank, we also think this is unnecessary to normalize/standardize them because they all have their unique meaning. And normalize/standardize them makes no sense.

We also think it unnecessary to one-hot encoding all categorical variables. For example, the title of the drama does not need one-hot encoding because each drama name is special and one-hot encoding the title will produce 1248 different variables. However, only one variable needs one-hot encoding—Content Rating because it only has a few different types that need to be one-hot encoded. We converted categorical data into numerical values so that we could use machine learning algorithms to it. Thus, since Content Rating included different types of content rating, we one-hot encoded it and converted it to numerical variable so that machine learning algorithms can use it.

Thus, below is the refined version of feature engineering:

![](untitled folder 2/featureengineering2.png)

Below is the final cleaned data after feature engineering:

![](untitled folder 2/FInalCLeaned.png){fig-align="left"}

### Key Findings:

After EDA and feature engineering, we found out the following things:

First, since no feature in a dataset has zero variance, it means that every feature contains some degree of variation or difference among its data points, indicating that each feature provides potentially useful information for analysis as no feature is completely constant with only one unique value across all samples.

Second, since the data for every numerical variable in a dataset is skewed, it indicates that the distribution of values for each numerical variable is not symmetrical, meaning there are more data points clustered towards one end of the scale with a "tail" extending towards the other.

Third, most audience gave these Korean drama high score while a few audience gave low score, meaning Korean drama are well made with good feedback from the audience.

Forth, most Korean drama has less than 20 episodes. Some have very long episodes and some have very short episodes. There is a negative relationship between duration and popularity ranking and a positive relationship between Total number of episodes and popularity ranking. Since higher number in ranking means lower popularity, we can tell that the audience likes longer duration for each episode but they prefer shorter numbers of total episodes.

Fifth, normally, there are less than 20 people who found any commit helpful, meaning most people have their own opinion on the drama. But, in general, if more people share same opinion, then the drama is more popular.

Sixth, there is a positive relationship between popularity ranking and rank, meaning popularity ranking and rank are very close measurement of the drama.

Seventh, there is a negative relationship between overall score/rewatch value score/music score and popularity ranking and there is a positive relationship between story score/acting cast score and popularity ranking. We can tell from these that most audience enjoys a Korean drama because of its story and acting cast, but higher level of music or rewatch value means less popularity. In other words, most audience may not like a Korean drama due to its music or rewatch value.

### Challenges and Future Recommendations:

The major challenge is missing value and time management. We cannot use imputation for the missing value in director name/screenwriter name, thus the only way is to find other data to replace it. However, we searched IMDb and other drama sources, the only way to get data from IMDb is web scrapping. However, based on the two week deadline, there is not enough time for us to learn web scrapping and finish the project on time.

For the future, if we had enough time, we would learn web scrapping and filling in all missing values. In addition, our study mainly focus on the numerical feature and we did not include actors names or recommendations given to different drama which could be important variables to study. Therefore, if we had enough time, we would include more text data and set them as other variables.

##### Contribution:

Mengyan Li (ml4779): Finding the data, Data Cleaning(fixing date format, remove outliers, merge datasets, drop/change to others for missing values), EDA(summary statistics, linear regression for the merged data and review.csv,correlation heatmap, missing value heatmap, histrogram for numerical variables), feature engineering(filter out zero/near-zero variance features, Box-Cox transformation, standardization/normalization, one-hot encoding), Report drafting

Zishun Shen (zs2695): EDA(tentatively approach to visualize the dataset, top and bottom ranking of the directors and screenwriters through popularity rank and rank, ranking through year boxplot), feature engineering (one-hot encoding)

Zhisheng Yang (zy2675): Data Cleaning(tentatively approach to drop missing values), EDA and feature engneering(linear regression visualization and standardize/normalize data, t test, feature importance bar chart, The actual vs. predicted popularity of K-dramas)

Shayan Huda Chowdhury (sc4040): tentatively approach to report drafting, Working on web scrapping. Combining popularity/ranking and revenue over the year, Some feature engineering, Merge datasets, Wrote functions to web scrape missing info, Classified sentiment of reviews using Hugging Face, Combine data
